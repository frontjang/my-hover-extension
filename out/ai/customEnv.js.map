{"version":3,"file":"customEnv.js","sourceRoot":"","sources":["../../src/ai/customEnv.ts"],"names":[],"mappings":"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","sourcesContent":["import { getEnvVar } from '../config/env';\nimport { logCustomAIDebug, redactSecret } from './customAiDebug';\n\nexport interface CustomAIEnvironmentConfig {\n  endpoint: string;\n  apiKey: string;\n  model: string;\n}\n\nconst COMPLETIONS_KEYS = [\n  'CUSTOMAI_CHAT_COMPLETIONS_ENDPOINT',\n  'CUSTOMAI_COMPLETIONS_ENDPOINT'\n];\n\nfunction trim(value: string | undefined): string {\n  return value ? value.trim() : '';\n}\n\nfunction buildEndpointFromBase(baseUrl: string | undefined): string {\n  const base = trim(baseUrl);\n\n  if (!base) {\n    return '';\n  }\n\n  const sanitized = base.endsWith('/') ? base.slice(0, -1) : base;\n  return `${sanitized}/chat/completions`;\n}\n\nexport function getCustomAIEnvironmentConfig(): CustomAIEnvironmentConfig {\n  const rawValues: Record<string, string> = {};\n\n  const captureValue = (key: string, value: string, redact = false): string => {\n    rawValues[key] = value ? (redact ? redactSecret(value) : value) : '<empty>';\n    return value;\n  };\n\n  const completionsValues = COMPLETIONS_KEYS.map((key) => captureValue(key, trim(getEnvVar(key))));\n  const baseUrl = captureValue('CUSTOMAI_BASE_URL', trim(getEnvVar('CUSTOMAI_BASE_URL')));\n\n  const explicitEndpoint = completionsValues.find(Boolean);\n  const endpoint = explicitEndpoint || buildEndpointFromBase(baseUrl);\n\n  const apiKey = captureValue('CUSTOMAI_API_KEY', trim(getEnvVar('CUSTOMAI_API_KEY')), true);\n  const modelValue = captureValue('CUSTOMAI_MODEL', trim(getEnvVar('CUSTOMAI_MODEL')));\n  const deployment = captureValue('CUSTOMAI_DEPLOYMENT', trim(getEnvVar('CUSTOMAI_DEPLOYMENT')));\n  const deploymentName = captureValue(\n    'CUSTOMAI_DEPLOYMENT_NAME',\n    trim(getEnvVar('CUSTOMAI_DEPLOYMENT_NAME'))\n  );\n  const model = modelValue || deployment || deploymentName;\n\n  logCustomAIDebug('Read CustomAI environment variables', rawValues);\n\n  const config: CustomAIEnvironmentConfig = {\n    endpoint,\n    apiKey,\n    model,\n  };\n\n  logCustomAIDebug('Resolved CustomAI environment configuration', {\n    endpoint: config.endpoint,\n    model: config.model,\n    apiKey: redactSecret(config.apiKey),\n  });\n\n  return config;\n}\n\nexport function getCustomAIMissingParts(\n  config: CustomAIEnvironmentConfig\n): string[] {\n  const missing: string[] = [];\n\n  if (!config.endpoint) {\n    missing.push('endpoint');\n  }\n\n  if (!config.apiKey) {\n    missing.push('API key');\n  }\n\n  if (!config.model) {\n    missing.push('model');\n  }\n\n  logCustomAIDebug('Evaluated CustomAI environment requirements', {\n    missing,\n    isComplete: missing.length === 0,\n  });\n\n  return missing;\n}\n\nexport interface CustomAIBrowserAuthConfig {\n  clientId?: string;\n  tenantId?: string;\n  authority?: string;\n  redirectUri?: string;\n  defaultScope?: string;\n}\n\nexport interface CustomAIAuthorizationDetails {\n  url?: string;\n  missing: string[];\n}\n\nexport function getCustomAIBrowserAuthConfig(): CustomAIBrowserAuthConfig {\n  const config: CustomAIBrowserAuthConfig = {\n    clientId: trim(getEnvVar('CUSTOM_CLIENT_ID')),\n    tenantId: trim(getEnvVar('CUSTOM_TENANT_ID')),\n    authority: trim(getEnvVar('CUSTOM_AUTHORITY')),\n    redirectUri: trim(getEnvVar('CUSTOM_REDIRECT_URI')),\n    defaultScope: trim(getEnvVar('CUSTOMAI_DEFAULT_SCOPE')),\n  };\n\n  logCustomAIDebug('Loaded CustomAI browser auth configuration', {\n    clientId: config.clientId,\n    tenantId: config.tenantId,\n    authority: config.authority,\n    redirectUri: config.redirectUri,\n    hasDefaultScope: !!config.defaultScope,\n  });\n\n  return config;\n}\n\nexport function buildCustomAIAuthorizationUrl(\n  authConfig: CustomAIBrowserAuthConfig = getCustomAIBrowserAuthConfig()\n): CustomAIAuthorizationDetails {\n  const missing: string[] = [];\n\n  if (!authConfig.clientId) {\n    missing.push('client id');\n  }\n\n  if (!authConfig.tenantId) {\n    missing.push('tenant id');\n  }\n\n  if (!authConfig.redirectUri) {\n    missing.push('redirect URI');\n  }\n\n  if (!authConfig.defaultScope) {\n    missing.push('default scope');\n  }\n\n  if (missing.length > 0) {\n    logCustomAIDebug('Unable to build CustomAI authorization URL due to missing values', { missing });\n    return { missing };\n  }\n\n  const baseAuthority = (authConfig.authority || `https://login.microsoftonline.com/${authConfig.tenantId}`).replace(/\\/+$/, '');\n  const params = new URLSearchParams({\n    client_id: authConfig.clientId!,\n    response_type: 'code',\n    redirect_uri: authConfig.redirectUri!,\n    response_mode: 'query',\n    scope: authConfig.defaultScope!,\n    prompt: 'select_account',\n  });\n\n  const url = `${baseAuthority}/oauth2/v2.0/authorize?${params.toString()}`;\n  logCustomAIDebug('Constructed CustomAI authorization URL', {\n    authority: baseAuthority,\n    hasQuery: params.toString().length > 0,\n  });\n\n  return { url, missing: [] };\n}\n"]}